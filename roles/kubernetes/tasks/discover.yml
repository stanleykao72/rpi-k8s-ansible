---
- name: check the cluster membership
  stat:
    path: /etc/kubernetes/admin.conf
  register: st
  when: node == "master"

- name: register master initialized status
  set_fact: 
    cluster: "initialized"
  when:
    - node == "master"
    - st.stat.exists
    - reset != true

- name: check the cluster membership
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: st
  when: node == "slave"

- name: register slaves initialized status
  set_fact: 
    cluster: "joined"
  when:
    - node == "slave"
    - st.stat.exists

- name: get the IP address of the node
  shell: ifconfig wlan0 | grep 'inet ' | awk '{print $2}'
  register: ipaddress_out

- name: set the node_ip
  set_fact:
    node_ip: "{{ ipaddress_out.stdout }}"

- name: wait up to 2 minutes for the k8s API server to come up
  shell: kubeadm token list
  register: api_test
  when:
    - node == "master"
    - cluster == "initialized"
  until: api_test.rc == 0
  retries: 12
  delay: 10

- name: get the current token
  shell: kubeadm token list | grep 'authentication,signing' | awk '{print $1}' | head -n1
  register: token_out
  when:
    - node == "master"
    - cluster == "initialized"

- name: set the current token
  set_fact:
    token: "{{ token_out.stdout }}"
  when:
    - node == "master"
    - cluster == "initialized"
    - token_out is defined

- name: generate a new token if there isn't one
  shell: kubeadm token create
  register: token_out
  when:
    - node == "master"
    - cluster == "initialized"
    - token is not defined

- name: set the current token
  set_fact:
    token: "{{ token_out.stdout }}"
  when:
    - node == "master"
    - cluster == "initialized"
    - token is not defined
    - token_out is defined
