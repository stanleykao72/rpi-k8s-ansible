---
# An Ingress controller proxies traffic between the outside world and a Service
# This document configures the cluster Ingress controller with the correct proxy configuration
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: website
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: website
          servicePort: 80
---
# A service bridges a set of pods to an external port on the cluster
kind: Service
apiVersion: v1
metadata:
  name: website
spec:
  selector:
    app: nginx
    tier: web
  ports:
  - protocol: TCP
    port: 80  # Port the client connects to
    targetPort: 80  # Port on the Pod traffic is forwarded to
  type: NodePort  # A random high port will be allocated on all cluster nodes to this service
---
# A deployment contains the pod spec and replica config
kind: Deployment
apiVersion: apps/v1
metadata:
  name: webserver
  labels:
    app: nginx
    tier: web
spec:
  replicas: 5
  selector:
    matchLabels:
      app: nginx
      tier: web
  template:
    metadata:
      labels:
        app: nginx
        tier: web
    spec:
      containers:
      - name: webserver
        image: michaelrobbins/k8s-example-web:latest
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          timeoutSeconds: 2
        ports:
        - containerPort: 80
